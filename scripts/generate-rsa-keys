#!/usr/bin/python
# This script generates a RSA keypair in the specified directory

import sys, argparse, os
from os.path import basename
from Crypto.PublicKey import RSA

def __make_parser():
    p = argparse.ArgumentParser(description='This decrypts an encrypted file')
    p.add_argument('-b', '--basename', type=str, help='specify the keypairs base filename', default = None, required = False)
    p.add_argument('-d', '--output-directory', type=str, help='specify an alternate output directory for the decrypted file', default = None, required = False)
    return p

def __main(argv):
    parser = __make_parser()
    settings = parser.parse_args(argv[1:])
    MYDIR = os.path.dirname(os.path.realpath(__file__))

    if (not os.path.isdir(settings.output_directory)):
        sys.stderr.write('Error directory' + settings.output_directory + 'does not exist')
        sys.exit(1)

    out_filename = os.path.join(settings.output_directory, settings.basename)

    privatekey = open(out_filename, "w")

    print >>privatekey, settings.basename

    sys.exit(0)

if __name__ == "__main__":
    __main(sys.argv)

__doc__ += __make_parser().format_help()
